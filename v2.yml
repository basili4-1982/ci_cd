name: Go CI

on: [push]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: go build ./...

      # РЕШЕНИЕ 3: Запускаем тесты с детектором гонок (Race Detector)
      - name: Run Tests
        run: go test -race -v ./... # Критически важный флаг -race для многопоточных приложений

      # РЕШЕНИЕ 4: Проверяем, что код отформатирован стандартно
      - name: Check Formatting
        run: |
          test -z "$(gofmt -l .)" # Если gofmt выводит список файлов - значит, есть неотформатированные файлы

      # РЕШЕНИЕ 5: Запускаем статический анализ (линтеры)
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.59.0 # Фиксируем версию линтера
